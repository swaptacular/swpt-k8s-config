apiVersion: dragonflydb.io/v1alpha1
kind: Dragonfly
metadata:
  name: dragonfly-db
spec:
  # Specifies the "Dragonfly" OCI image to use.
  #
  image: docker.dragonflydb.io/dragonflydb/dragonfly:v1.30.0

  # Specifies the number of Dragonfly server instances. It is
  # recommended to be at least 2. If set to 1, only a primary server
  # will run, with no replicas.
  #
  replicas: 1

  # Specifies how often a snapshot should be made, and the size of the
  # persistent volumes (PVs) on which the snapshots will be stored.
  #
  # IMPORTANT NOTE: Once the persistent volume claims have been
  # created, increasing the storage size here will not automatically
  # expand the PVs. To expand the PVs, after increasing the storage
  # size here, and applying the changes to the cluster, follow this
  # procedure:
  #
  # 1. For each PVC in the StatefulSet, run:
  #
  #    $ kubectl edit pvc <name>
  #
  #    and increase the capacity of each PVC.
  #
  # 2. Run:
  #
  #    $ kubectl delete sts --cascade=orphan dragonfly-db
  #
  #    to delete the StatefulSet and leave its pods.
  #
  # 3. Wait until the Dragonfly operator recreates the StatefulSet
  #    automatically.
  #
  # 4. During the next pod rollout, pods' PVs will be resized. To
  #    trigger a pod rollout, you may change the
  #    "pods-restart-attempt" annotation (see bellow), or run:
  #
  #    $ kubectl rollout restart sts dragonfly-db
  #
  snapshot:
    cron: "*/5 * * * *"
    persistentVolumeClaimSpec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi

  # Specifies Kubernetes memory and CPU requests and limits. It is
  # highly recommended that the memory request is the same as the
  # memory limit.
  #
  resources:
    requests:
      cpu: 100m
      memory: 350Mi
    limits:
      cpu: 1000m
      memory: 350Mi

  annotations:
    # The value can be changed to force pods restart.
    #
    pods-restart-attempt: attempt-0
