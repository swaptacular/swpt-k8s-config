apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-gateway
  labels:
    app.kubernetes.io/name: swpt-debtors
    app.kubernetes.io/component: app-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: swpt-debtors
      app.kubernetes.io/component: app-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: swpt-debtors
        app.kubernetes.io/component: app-gateway
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/name: swpt-debtors
                app.kubernetes.io/component: app-gateway
            topologyKey: kubernetes.io/hostname
            matchLabelKeys:
            - pod-template-hash
      priorityClassName: smp-receiver
      containers:
        - name: app-gateway
          image: nginx
          ports:
            - name: https
              containerPort: 443
            - name: stomp
              containerPort: 1234
          readinessProbe:
            tcpSocket:
              port: stomp
            initialDelaySeconds: 5
          env:
            - name: PUBLIC_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: debtors-agent-config
                  key: PUBLIC_HOSTNAME
            - name: DEBTORS_HYDRA_URL
              value: http://swpt-hydra-public:4444
            - name: DEBTORS_LOGIN_URL
              value: http://apiproxy  # TODO: Change to "http://swpt-login".
            - name: DEBTORS_SERVER_URL
              value: http://apiproxy
            - name: DEBTORS_SWAGGER_UI_URL
              value: http://swagger-ui
            - name: DEBTORS_WEBAPP_URL
              value: http://swpt-debtors-ui
            - name: PORT
              value: "443"
            - name: NGINX_ENTRYPOINT_QUIET_LOGS
              value: "1"
          volumeMounts:
            - name: ssl-certificate
              mountPath: /etc/nginx/ssl/cert.pem
              subPath: cert
            - name: ssl-certificate
              mountPath: /etc/nginx/ssl/key.pem
              subPath: key
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-config
              mountPath: /etc/nginx/templates/default.conf.template
              subPath: default.conf.template
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-gateway-config
        - name: ssl-certificate
          secret:
            secretName: ssl-certificate

---
apiVersion: v1
kind: Service
metadata:
  name: app-gateway
  labels:
    app.kubernetes.io/name: swpt-debtors
    app.kubernetes.io/component: app-gateway
spec:
  selector:
    app.kubernetes.io/name: swpt-debtors
    app.kubernetes.io/component: app-gateway
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    - name: stomp
      port: 1234
      protocol: TCP
      targetPort: stomp
  type: LoadBalancer

  # When "externalTrafficPolicy" is "Cluster", the client IPs will be
  # unknown to the server. To preserve the client IPs, this should be
  # set to "Local", in which case most providers will preserve the
  # client IPs. However, for some providers this will not be enough.
  # Digital Ocean, for example, requires you to also add this
  # annotation to the service:
  # `service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"`,
  # and then change/configure the server to use "Proxy protocol" (see
  # https://seriousben.com/posts/2020-02-exploring-the-proxy-protocol/).
  #
  externalTrafficPolicy: Cluster

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: app-gateway
  labels:
    app.kubernetes.io/name: swpt-debtors
    app.kubernetes.io/component: app-gateway
spec:
  maxUnavailable: 30%
  selector:
    matchLabels:
    app.kubernetes.io/name: swpt-debtors
    app.kubernetes.io/component: app-gateway
