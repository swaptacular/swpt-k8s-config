- op: test
  path: /metadata/name
  value: trade-solver-db

- op: test
  path: /metadata/labels
  value: null
- op: add
  path: /metadata/labels
  value:
    app.kubernetes.io/name: swpt-trade
    app.kubernetes.io/component: solver-db

- op: test
  path: /spec/podPriorityClassName
  value: null
- op: add
  path: /spec/podPriorityClassName
  value: trade-solver-database

- op: test
  path: /spec/teamId
  value: swpt

- op: test
  path: /spec/users
  value:
    db_owner: []

- op: test
  path: /spec/databases
  value:
    db: db_owner

- op: test
  path: /spec/patroni
  value: null
- op: add
  path: /spec/patroni
  value:
    synchronous_mode: true

- op: test
  path: /spec/additionalVolumes
  value: null
- op: add
  path: /spec/additionalVolumes
  value:
    - name: minio-ca-certificate
      mountPath: /certs/minio
      targetContainers:
      - postgres
      - backup-exporter
      volumeSource:
        configMap:
          name: kube-root-ca.crt
    - name: walg
      mountPath: /run/etc
      targetContainers:
      - postgres
      - backup-exporter
      volumeSource:
        emptyDir: {}

- op: add
  path: /spec/env/-
  value:
    name: CLONE_WALG_LIBSODIUM_KEY
    valueFrom:
      secretKeyRef:
        name: spilo-env-secret
        key: WALG_LIBSODIUM_KEY

- op: add
  path: /spec/env/-
  value:
    name: CLONE_AWS_ACCESS_KEY_ID
    valueFrom:
      secretKeyRef:
        name: spilo-env-secret
        key: AWS_ACCESS_KEY_ID

- op: add
  path: /spec/env/-
  value:
    name: CLONE_AWS_SECRET_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: spilo-env-secret
        key: AWS_SECRET_ACCESS_KEY

- op: add
  path: /spec/env/-
  value:
    name: CLONE_AWS_REGION
    valueFrom:
      secretKeyRef:
        name: spilo-env-secret
        key: AWS_REGION
        optional: true

- op: add
  path: /spec/env/-
  value:
    name: CLONE_AWS_ENDPOINT
    valueFrom:
      secretKeyRef:
        name: spilo-env-secret
        key: AWS_ENDPOINT
        optional: true

- op: add
  path: /spec/env/-
  value:
    name: CLONE_WALG_S3_CA_CERT_FILE
    valueFrom:
      secretKeyRef:
        name: spilo-env-secret
        key: WALG_S3_CA_CERT_FILE
        optional: true

- op: add
  path: /spec/env/-
  value:
    name: STANDBY_WALG_LIBSODIUM_KEY
    valueFrom:
      secretKeyRef:
        name: spilo-env-secret
        key: WALG_LIBSODIUM_KEY

- op: add
  path: /spec/env/-
  value:
    name: STANDBY_AWS_ACCESS_KEY_ID
    valueFrom:
      secretKeyRef:
        name: spilo-env-secret
        key: AWS_ACCESS_KEY_ID

- op: add
  path: /spec/env/-
  value:
    name: STANDBY_AWS_SECRET_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: spilo-env-secret
        key: AWS_SECRET_ACCESS_KEY

- op: add
  path: /spec/env/-
  value:
    name: STANDBY_AWS_REGION
    valueFrom:
      secretKeyRef:
        name: spilo-env-secret
        key: AWS_REGION
        optional: true

- op: add
  path: /spec/env/-
  value:
    name: STANDBY_AWS_ENDPOINT
    valueFrom:
      secretKeyRef:
        name: spilo-env-secret
        key: AWS_ENDPOINT
        optional: true

- op: add
  path: /spec/env/-
  value:
    name: STANDBY_WALG_S3_CA_CERT_FILE
    valueFrom:
      secretKeyRef:
        name: spilo-env-secret
        key: WALG_S3_CA_CERT_FILE
        optional: true

- op: test
  path: /spec/sidecars
  value: null
- op: add
  path: /spec/sidecars
  value:
  - name: exporter
    image: postgres-exporter  # Will be automatically replaced.
    ports:
      - name: exporter
        containerPort: 9187
    env:
      - name: DATA_SOURCE_URI
        value: "127.0.0.1:5432"
      - name: DATA_SOURCE_USER
        valueFrom:
          secretKeyRef:
            name: postgres.trade-solver-db.credentials.postgresql.acid.zalan.do
            key: username
      - name: DATA_SOURCE_PASS
        valueFrom:
          secretKeyRef:
            name: postgres.trade-solver-db.credentials.postgresql.acid.zalan.do
            key: password
  - name: backup-exporter
    image: walg-exporter  # Will be automatically replaced.
    ports:
      - name: backup-exporter
        containerPort: 9351
    env:
      - name: PGHOST
        value: 127.0.0.1
      - name: PGPORT
        value: "5432"
      - name: PGUSER
        valueFrom:
          secretKeyRef:
            name: postgres.trade-solver-db.credentials.postgresql.acid.zalan.do
            key: username
      - name: PGPASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres.trade-solver-db.credentials.postgresql.acid.zalan.do
            key: password
