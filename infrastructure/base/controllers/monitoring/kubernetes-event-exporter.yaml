apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kubernetes-event-exporter
  namespace: monitoring
spec:
  interval: 10m
  chart:
    spec:
      chart: charts/kubernetes-event-exporter-3.5.6.tgz
      sourceRef:
        kind: GitRepository
        name: flux-system
        namespace: flux-system

  targetNamespace: monitoring
  releaseName: event-exporter
  values:
    global:
      security:
        allowInsecureImages: true
      imagePullSecrets:
        - name: regcreds

      # # Global image registry to use if it needs to be overridden for some
      # # specific use cases (e.g local registries, custom images, ...)
      # imageRegistry: "myregistry.example.com"

    image:
      repository: bitnami/kubernetes-event-exporter
      tag: 1.7.0-debian-12-r42
      digest: ""

    replicaCount: 1  # Normally, 1 replica should be enough even in production.
    priorityClassName: critical-monitoring
    podAntiAffinityPreset: hard
    resources: {}
      # requests:
      #   cpu: 100m
      #   ephemeral-storage: 50Mi
      #   memory: 128Mi
      # limits:
      #   cpu: 150m
      #   ephemeral-storage: 2Gi
      #   memory: 192Mi

    config:
      logLevel: debug
      logFormat: pretty
      receivers:
      - name: loki
        loki:
          streamLabels:
            foo: event-exporter
          url: http://loki-write:3100/loki/api/v1/push
      - name: dump
         file:
           path: "/dev/stdout"
           ## Example:
           ## layout:
           ##   message: "{{ .Message }}"
           ##   reason: "{{ .Reason }}"
           ##   type: "{{ .Type }}"
           ##   count: "{{ .Count }}"
           ##   kind: "{{ .InvolvedObject.Kind }}"
           ##   name: "{{ .InvolvedObject.Name }}"
           ##   namespace: "{{ .Namespace }}"
           ##   component: "{{ .Source.Component }}"
           ##   host: "{{ .Source.Host }}"
           ##
           layout: {}
      route:
        routes:
        - match:
          - receiver: loki

    metrics:
      enabled: true
