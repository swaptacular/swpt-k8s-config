# Pods in the monitoring namespace only need to be able to connect to
# pods in the same namespace, plus of course, the standard cluster
# services (like the API server the DNS resolver). The only exception
# from this rule are Prometheus's pods.
#
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: namespace-only-egress
spec:
  podSelector:
    matchExpressions:
      - key: app.kubernetes.io/name
        operator: NotIn
        values: [prometheus, kube-prometheus-stack-prometheus-operator]
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector: {}
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system

---
# To scrape metrics, Prometheus pods need to be able to connect to
# each pod in the cluster.
#
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-prometheus-clusterwide-egress
spec:
  podSelector:
    matchExpressions:
      - key: app.kubernetes.io/name
        operator: In
        values: [prometheus, kube-prometheus-stack-prometheus-operator]
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 10.0.0.0/8
    - ipBlock:
        cidr: 172.16.0.0/12
    - ipBlock:
        cidr: 192.168.0.0/16

---
# The alert manager needs to be able send email to an SMTP server.
#
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-alertmanager-smtp-access
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: alertmanager
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        # This value will be automatically replaced.
        cidr: 255.255.255.255/32

---
# Pods in the monitoring namespace only need to be able to receive
# connections from pods in the same namespace. The only exception from
# this rule are Grafana's pods.
#
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: namespace-only-ingress
spec:
  policyTypes:
    - Ingress
  podSelector: {}
  ingress:
    - from:
        - podSelector: {}

---
# Grafana's HTTP port must be exposed to everybody.
#
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-graphana-ingress
spec:
  policyTypes:
    - Ingress
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: grafana
  ingress:
    - ports:
        - port: grafana
          protocol: TCP
