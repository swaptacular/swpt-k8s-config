apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 10m
  chart:
    spec:
      chart: charts/kube-prometheus-stack-74.0.0.tgz
      sourceRef:
        kind: GitRepository
        name: flux-system
        namespace: flux-system

  targetNamespace: monitoring
  releaseName: prometheus
  values:
    global:
      imagePullSecrets:
        - name: regcreds

      # Global image registry to use if it needs to be overridden for
      # some specific use cases (e.g local registries, custom images)
      imageRegistry: null

    alertmanager:
      alertmanagerSpec:
        image:
          repository: prometheus/alertmanager
          sha: ""
        replicas: 1
        storage:
          volumeClaimTemplate:
            spec:
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
        priorityClassName: critical-monitoring
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        podAntiAffinity: "hard"  # can also be "soft" or ""
      networkPolicy:
        enabled: false
      podDisruptionBudget:
        enabled: true
        minAvailable: null
        maxUnavailable: 30%
        unhealthyPodEvictionPolicy: AlwaysAllow

    prometheusOperator:
      image:
        repository: prometheus-operator/prometheus-operator
        sha: ""
      priorityClassName: critical-operator
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 100m
          memory: 100Mi
      admissionWebhooks:
        patch:
          image:
            repository: ingress-nginx/kube-webhook-certgen
            sha: ""
      prometheusConfigReloader:
        image:
          repository: prometheus-operator/prometheus-config-reloader
          sha: ""
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
          limits:
            cpu: 200m
            memory: 50Mi

    prometheus:
      prometheusSpec:
        image:
          repository: prometheus/prometheus
          sha: ""
        replicas: 1
        retention: 10d
        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
        priorityClassName: critical-monitoring
        resources:
          limits:
            cpu: "4"
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 500Mi
        podAntiAffinity: "hard"  # can also be "soft" or ""
      networkPolicy:
        enabled: false
      podDisruptionBudget:
        enabled: true
        minAvailable: null
        maxUnavailable: 50%
        unhealthyPodEvictionPolicy: AlwaysAllow

    grafana:
      enabled: true
      image:
        repository: grafana/grafana
        sha: ""
      replicas: 1
      sidecar:
        image:
          repository: kiwigrid/k8s-sidecar
          sha: ""
        # resources:
        #   limits:
        #     cpu: 100m
        #     memory: 100Mi
        #   requests:
        #     cpu: 10m
        #     memory: 50Mi
      testFramework:
        enabled: true
      service:
        type: LoadBalancer  # ClusterIP
      priorityClassName: critical-monitoring
      # resources:
      #   limits:
      #     cpu: 100m
      #     memory: 128Mi
      #   requests:
      #     cpu: 10m
      #     memory: 128Mi
      podDisruptionBudget:
        maxUnavailable: 50%
        unhealthyPodEvictionPolicy: AlwaysAllow

    kube-state-metrics:
      image:
        repository: kube-state-metrics/kube-state-metrics
        sha: ""
      replicas: 1
      affinity: |
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  {{- include "kube-state-metrics.selectorLabels" . | indent 10 }}
              topologyKey: kubernetes.io/hostname
              matchLabelKeys:
              - pod-template-hash
      priorityClassName: critical-monitoring
      resources:
        limits:
         cpu: 100m
         memory: 64Mi
        requests:
         cpu: 10m
         memory: 32Mi
      podDisruptionBudget:
        maxUnavailable: 30%
        unhealthyPodEvictionPolicy: AlwaysAllow

    prometheus-node-exporter:
      image:
        repository: prometheus/node-exporter
        digest: ""
      priorityClassName: critical-monitoring
      resources:
        limits:
          cpu: 200m
          memory: 50Mi
        requests:
          cpu: 10m
          memory: 30Mi
