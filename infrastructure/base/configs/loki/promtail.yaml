apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: promtail
spec:
  interval: 10m
  chart:
    spec:
      chart: charts/promtail-6.17.0.tgz
      sourceRef:
        kind: GitRepository
        name: flux-system
        namespace: flux-system

  targetNamespace: monitoring
  releaseName: promtail
  postRenderers:
    - kustomize:
        images: []
  values:
    priorityClassName: critical-monitoring
    imagePullSecrets:
      - name: regcreds
    image:
      # Do not change these! Use "postRenderers/kustomize/images" instead.
      registry: docker.io
      repository: grafana/promtail
      tag: "3.5.2"
    resources: {}
    config:
      logLevel: info
      logFormat: logfmt
      clients:
        - url: http://loki-write:3100/loki/api/v1/push
      snippets:
        extraRelabelConfigs:
          - source_labels:
              - __meta_kubernetes_pod_label_log_pipeline
            action: replace
            target_label: meta_log_pipeline

        extraLimitsConfig:
          max_line_size: 250000
          max_line_size_truncate: true

        pipelineStages:
          # This is always needed.
          - cri: {}

          # Protect against "crazy" pods.
          - limit:
              rate: 1000
              burst: 5000
              drop: true
              by_label_name: "pod"

          # The "swpt-python-logging" log pipeline:
          - match:
              selector: '{meta_log_pipeline="swpt-python-logging",container!~"^(await-migrations|activate|configure)(-.*)?$"}'
              stages:
                # Remove Oathkeeper welcome messages.
                - drop:
                    expression: '^($|Thank you for using ORY Oathkeeper|Take security seriously and subscribe to the ORY Security Newsletter|>> Subscribe now: \S+ <<)'

                # Try to parse the log message as JSON.
                - json:
                    expressions:
                      levelname: levelname
                    drop_malformed: false

                # Lowercase the parsed "levelname" field. Plain-text
                # logs automatically receive an "error" level.
                - template:
                    source: levelname
                    template: '{{ lower (default "ERROR" .Value) }}'

                # Label the log with a pipeline name and a level. Note
                # that we remove the "meta_log_pipeline" label here so
                # that it is not included into the exported custom
                # metrics. Also, we make sure only "critical",
                # "error", and "warning" severity levels gets labelled
                # (and therefore indexed).
                - static_labels:
                    log_pipeline: swpt-python-logging
                - labeldrop:
                    - meta_log_pipeline
                - labels:
                    level: levelname
                - match:
                    selector: '{level!~"^(critical|error|warning)$"}'
                    stages:
                      - labeldrop:
                          - level

                # Export custom metrics.
                - metrics:
                    swpt_python_logging_lines:
                      type: Counter
                      description: "total number of log lines from the swpt-python-logging pipeline"
                      prefix: promtail_pipeline_
                      max_idle_duration: 24h
                      config:
                        match_all: true
                        action: inc

          # Remove extra labels.
          - labeldrop:
              - meta_log_pipeline
