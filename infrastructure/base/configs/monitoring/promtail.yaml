apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: promtail
spec:
  interval: 10m
  chart:
    spec:
      chart: charts/promtail-6.17.0.tgz
      sourceRef:
        kind: GitRepository
        name: flux-system
        namespace: flux-system

  targetNamespace: monitoring
  releaseName: promtail
  postRenderers:
    - kustomize:
        images: []
  values:
    priorityClassName: critical-monitoring
    imagePullSecrets:
      - name: regcreds
    image:
      # Do not change these! Use "postRenderers/kustomize/images" instead.
      registry: docker.io
      repository: grafana/promtail
      tag: "3.5.1"
    resources: {}
    config:
      logLevel: info
      logFormat: logfmt
      clients:
        - url: http://loki-write:3100/loki/api/v1/push
      snippets:
        extraRelabelConfigs:
          - source_labels:
              - __meta_kubernetes_pod_label_log_format
            action: replace
            target_label: meta_log_format
          - source_labels:
              - __meta_kubernetes_pod_label_log_client
            action: replace
            target_label: meta_log_client
          - source_labels:
              - __meta_kubernetes_pod_label_log_oathkeeper
            action: replace
            target_label: meta_log_oathkeeper

        pipelineStages:
          # This is always needed.
          - cri: {}

          # Drop empty lines.
          - drop:
              expression: '^$'

          # Remove Oathkeeper welcome messages if necessary.
          - match:
              selector: '{meta_log_oathkeeper="true"}'
              stages:
                - drop:
                    expression: '^Thank you for using ORY Oathkeeper|Take security seriously and subscribe to the ORY Security Newsletter|>> Subscribe now: \S+ <<'

          # Apply special rules for Python JSON loggers.
          - match:
              selector: '{meta_log_format="json",meta_log_client="python-logger"}'
              stages:
                - labelallow:
                    - level

                # # Try to parse the log message as JSON.
                # - json:
                #     expressions:
                #       asctime: asctime
                #       loggername: name
                #       levelname: levelname
                #       message: message
                #     drop_malformed: false

                # # Lowercase the parsed "levelname" field. Make it a label.
                # - template:
                #     source: levelname
                #     template: '{{ ToLower .Value }}'
                # - labels:
                #     level: levelname

                # # For JSON messages: Set the timestamp and make them more readable.
                # - match:
                #     selector: '{level!=""}'
                #     stages:
                #       - timestamp:
                #           source: asctime
                #           format: 2006-01-02T15:04:05-0700
                #       - template:
                #           source: message
                #           template: logger="{{ .loggername }}" msg="{{ .Value }}"
                #       - output:
                #           source: message

                # # For plain text messages: Assign an "error" level.
                # - match:
                #     selector: '{level=""}'
                #     stages:
                #       - static_labels:
                #           level: 'error'
