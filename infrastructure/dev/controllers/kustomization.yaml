apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# You may edit this section to specify different OCI images to use for
# the controllers. Also, it is recommended to specify an image digest
# instead of an image tag ("digest: <DIGEST>", instead of "newTag:
# <TAG>").
#
images:

# Postgres operator:
- name: ghcr.io/zalando/postgres-operator:v1.14.0
  newName: ghcr.io/zalando/postgres-operator
  newTag: v1.14.0

# DragonflyDB operator:
- name: docker.dragonflydb.io/dragonflydb/operator:v1.1.11
  newName: docker.dragonflydb.io/dragonflydb/operator
  newTag: v1.1.11
- name: quay.io/brancz/kube-rbac-proxy:v0.16.0
  newName: quay.io/brancz/kube-rbac-proxy
  newTag: v0.16.0

# Cert-manager:
- name: quay.io/jetstack/cert-manager-cainjector:v1.17.2
  newName: quay.io/jetstack/cert-manager-cainjector
  newTag: v1.17.2
- name: quay.io/jetstack/cert-manager-controller:v1.17.2
  newName: quay.io/jetstack/cert-manager-controller
  newTag: v1.17.2
- name: quay.io/jetstack/cert-manager-webhook:v1.17.2
  newName: quay.io/jetstack/cert-manager-webhook
  newTag: v1.17.2

# RabbitMQ operators:
- name: rabbitmqoperator/cluster-operator:2.12.1
  newName: rabbitmqoperator/cluster-operator
  newTag: 2.12.1
- name: rabbitmqoperator/messaging-topology-operator:1.17.0
  newName: rabbitmqoperator/messaging-topology-operator
  newTag: 1.17.0

# Metrics server:
- name: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  newName: registry.k8s.io/metrics-server/metrics-server
  newTag: v0.7.2

patches:

# This patch specifies the OCI images for all Loki-related containers.
# You may specify your private container image registry (like
# "registry.example.com") in the `/spec/values/global/image/registry`
# value.
#
# NOTE: The values for `/spec/values/sidecar/image/repository` and
# `/spec/postRenderers/0/kustomize/images/-/newName` must include the
# registry name, because for them the "global.image.registry" setting
# will be ignored.
#
- patch: |
    - op: replace
      path: /spec/values/global/image/registry
      value: null

    - op: replace
      path: /spec/values/loki/image/repository
      value: grafana/loki
    - op: replace
      path: /spec/values/loki/image/digest
      value: sha256:a74594532eec4cc313401beedc4dd2708c43674c032084b1aeb87c14a5be1745

    - op: replace
      path: /spec/values/lokiCanary/image/repository
      value: grafana/loki-canary
    - op: replace
      path: /spec/values/lokiCanary/image/digest
      value: sha256:bdec3b1755f6c8ddb0208134e3452b5dad7356963765e75c29375e3ebb8cbb65

    - op: replace
      path: /spec/values/gateway/image/repository
      value: nginxinc/nginx-unprivileged
    - op: replace
      path: /spec/values/gateway/image/digest
      value: sha256:40e8efbfcfd6e26a47a73df5415454d7e42158971ee2d0d2746a2ee22df28398

    - op: replace
      path: /spec/values/sidecar/image/repository
      value: docker.io/kiwigrid/k8s-sidecar
    - op: replace
      path: /spec/values/gateway/image/sha
      value: sha256:49dcce269568b1645b0050f296da787c99119647965229919a136614123f0627

    - op: add
      path: /spec/postRenderers/0/kustomize/images/-
      value:
        name: memcached:1.6.38-alpine
        newName: docker.io/memcached
        digest: sha256:08b6a6cba188fab22215b24a3d5c1ccc18343bc337268f663f20cd86dbdfffeb
  target:
    group: helm.toolkit.fluxcd.io
    version: v2
    kind: HelmRelease
    name: loki
    namespace: monitoring

# This patch specifies the kubernetes-event-exporter's OCI image. You
# should set image registry, image repository, and image digest.
#
- patch: |
    - op: replace
      path: /spec/values/image/registry
      value: docker.io
    - op: replace
      path: /spec/values/image/repository
      value: bitnami/kubernetes-event-exporter
    - op: replace
      path: /spec/values/image/digest
      value: sha256:03937b1be9fad8702059415e021eee2cba931ba04a607209c3da0e5cec66c223
  target:
    group: helm.toolkit.fluxcd.io
    version: v2
    kind: HelmRelease
    name: kubernetes-event-exporter
    namespace: monitoring

# This patch configures the CPU, memory, and ephemeral-storage
# requests and limits for the kubernetes-event-exporter pod. The
# defaults (check the patched HelmRelease object) are good for small
# clusters, and should be increased for bigger clusters, or decreased
# for dev clusters.
- target:
    group: helm.toolkit.fluxcd.io
    version: v2
    kind: HelmRelease
    name: kubernetes-event-exporter
    namespace: monitoring
  patch: |-
    - op: replace
      path: /spec/values/resources
      value:
        requests:
          cpu: 1m
          memory: 29Mi
          ephemeral-storage: 5Mi
        limits:
          cpu: 150m
          memory: 192Mi
          ephemeral-storage: 2Gi

# This patch is sometimes needed (in "KinD" clusters for example) in
# order for the metrics-server to work. It simply adds
# "--kubelet-insecure-tls" to the list of arguments for the metrics
# server process. Comment this section out if this does not apply to
# your cluster.
- target:
    version: v1
    kind: Deployment
    name: metrics-server
    namespace: kube-system
  path: ../../base/controllers/metrics-server/patches/kubelet-insecure-tls.yaml

# This patch configures the CPU and memory requests for the metrics
# server pod. The default is cpu: 100m, and memory: 200Mi, which
# should be enough for clusters with up to 100 nodes. For clusters of
# more than 100 nodes, additional: 1m core per node, and 2MiB memory
# per node should be requested.
- target:
    version: v1
    kind: Deployment
    name: metrics-server
    namespace: kube-system
  patch: |-
    - op: replace
      path: /spec/template/spec/containers/0/resources/requests
      value:
        cpu: 5m
        memory: 50Mi

secretGenerator:
- name: loki-object-store
  namespace: monitoring
  files:
  # The "password" for the S3 service.
  - AWS_SECRET_ACCESS_KEY=secrets/loki-aws-secret-access-key.encrypted

  literals:
  # The "username" for the S3 service.
  - AWS_ACCESS_KEY_ID=console

  # The endpoint for the S3 service.
  - AWS_ENDPOINT=https://minio.minio-tenant.svc.cluster.local:443

  # When Amazon S3 is used, this specifies the AWS region. In that
  # case, specifying `AWS_ENDPOINT` should not be necessary.
  - AWS_REGION=us-east-1

  options:
    disableNameSuffixHash: true
  type: Opaque

- name: regcreds
  namespace: cert-manager
  files:
  - ".dockerconfigjson=../regcreds.json.encrypted"
  options:
    disableNameSuffixHash: true
  type: kubernetes.io/dockerconfigjson

- name: regcreds
  namespace: dragonfly-operator-system
  files:
  - ".dockerconfigjson=../regcreds.json.encrypted"
  options:
    disableNameSuffixHash: true
  type: kubernetes.io/dockerconfigjson

- name: regcreds
  namespace: postgres-operator
  files:
  - ".dockerconfigjson=../regcreds.json.encrypted"
  options:
    disableNameSuffixHash: true
  type: kubernetes.io/dockerconfigjson

- name: regcreds
  namespace: rabbitmq-system
  files:
  - ".dockerconfigjson=../regcreds.json.encrypted"
  options:
    disableNameSuffixHash: true
  type: kubernetes.io/dockerconfigjson

- name: regcreds
  namespace: monitoring
  files:
  - ".dockerconfigjson=../regcreds.json.encrypted"
  options:
    disableNameSuffixHash: true
  type: kubernetes.io/dockerconfigjson

- name: regcreds
  namespace: kube-system
  files:
  - ".dockerconfigjson=../regcreds.json.encrypted"
  options:
    disableNameSuffixHash: true
  type: kubernetes.io/dockerconfigjson

resources:
- ../../base/controllers/
