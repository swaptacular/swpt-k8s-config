apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# You may edit this section to specify different OCI images to use for
# the controllers. Also, it is recommended to specify an image digest
# instead of an image tag ("digest: <DIGEST>", instead of "newTag:
# <TAG>").
#
images:

# Minio operator:
- name: minio/operator:v6.0.4
  newName: minio/operator
  digest: sha256:3b00b4de407a0be25a13d69faf4dc2727064b6bbbd89050c494fc768a433a755

# Postgres operator:
- name: ghcr.io/zalando/postgres-operator:v1.14.0
  newName: ghcr.io/zalando/postgres-operator
  digest: sha256:4f40cfc2283b8389ff2e85c3af17c428dee29963be20ddb28b451ead9984b6a9

# DragonflyDB operator:
- name: docker.dragonflydb.io/dragonflydb/operator:v1.1.11
  newName: docker.dragonflydb.io/dragonflydb/operator
  digest: sha256:11cef45ec1079b9d97930fc99ecd08ba29d4eca55cdb45887cb0ac40ee4e4d24
- name: quay.io/brancz/kube-rbac-proxy:v0.16.0
  newName: quay.io/brancz/kube-rbac-proxy
  digest: sha256:2c8f8c357ff87b8bc5df4d967d5f52a23528c5e9c025f9aaa653a9ef4747585f

# Cert-manager:
- name: quay.io/jetstack/cert-manager-cainjector:v1.17.4
  newName: quay.io/jetstack/cert-manager-cainjector
  digest: sha256:0f7dcc7ca23dc95c32323ddd7b638c3fa318662985378360a1aeb9c72473e147
- name: quay.io/jetstack/cert-manager-controller:v1.17.4
  newName: quay.io/jetstack/cert-manager-controller
  digest: sha256:189920e5752ec7d56a6329347969d847bfd867c07119873c849f300795a0be7b
- name: quay.io/jetstack/cert-manager-webhook:v1.17.4
  newName: quay.io/jetstack/cert-manager-webhook
  digest: sha256:1e4711c91ea4c45baab763bec3875528847f8221a577aa81b325cac49d68cd09

# RabbitMQ operators:
- name: rabbitmqoperator/cluster-operator:2.12.1
  newName: rabbitmqoperator/cluster-operator
  digest: sha256:0a7bd7f368168995b94303df54f246d5da67986cef3f5611884499d5d6abcf1b
- name: rabbitmqoperator/messaging-topology-operator:1.17.2
  newName: rabbitmqoperator/messaging-topology-operator
  digest: sha256:c55bea19b4db1e7c54ae0e4a7aa62a5a33a1bd8ceb906d0e3eecca5f33f14b36

# Metrics server:
- name: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  newName: registry.k8s.io/metrics-server/metrics-server
  digest: sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9

# The Nginx server which serves the Grafana plugins:
- name: swpt-http-server
  newName: ghcr.io/swaptacular/swpt_http_server
  digest: sha256:f4c12ebca1acac14fa7aef6c7d7cb8583ee58a29d509545cb381ae0c1d6771e8

patches:

# This patch is sometimes needed (in "KinD" clusters for example) in
# order for the metrics-server to work. It simply adds
# "--kubelet-insecure-tls" to the list of arguments for the metrics
# server process. Comment this section out if this does not apply to
# your cluster.
#
- target:
    version: v1
    kind: Deployment
    name: metrics-server
    namespace: kube-system
  path: ../../base/controllers/metrics-server/patches/kubelet-insecure-tls.yaml

# This patch configures the CPU and memory requests for the metrics
# server pod. The default is cpu: 100m, and memory: 200Mi, which
# should be enough for clusters with up to 100 nodes. For clusters of
# more than 100 nodes, additional: 1m core per node, and 2MiB memory
# per node should be requested.
#
- patch: |-
    - op: replace
      path: /spec/template/spec/containers/0/resources/requests
      value:
        cpu: 5m
        memory: 50Mi

  target:
    version: v1
    kind: Deployment
    name: metrics-server
    namespace: kube-system

# This patch configures the CPU and memory requests and limits for the
# Postgres operator pod.
#
- patch: |-
    - op: replace
      path: /spec/template/spec/containers/0/resources
      value:
        requests:
          cpu: 1m
          memory: 33Mi
        limits:
          cpu: 500m
          memory: 500Mi

  target:
    kind: Deployment
    name: postgres-operator
    namespace: postgres-operator

# This patch configures the CPU and memory requests and limits for the
# RabbitMQ cluster operator pod.
#
- patch: |-
    - op: replace
      path: /spec/template/spec/containers/0/resources
      value:
        requests:
          cpu: 1m
          memory: 24Mi
        limits:
          cpu: 200m
          memory: 500Mi

  target:
    kind: Deployment
    name: rabbitmq-cluster-operator
    namespace: rabbitmq-system

# This patch configures the CPU and memory requests and limits for the
# RabbitMQ messaging topology operator pod.
#
- patch: |-
    - op: replace
      path: /spec/template/spec/containers/0/resources
      value:
        requests:
          cpu: 1m
          memory: 28Mi
        limits:
          cpu: 300m
          memory: 500Mi

  target:
    kind: Deployment
    name: messaging-topology-operator
    namespace: rabbitmq-system

# This patch configures the Cert-manager's controller pod.
#
- patch: |-
    # Configures the OCI image used for performing an ACME "http01"
    # challenge. This simply replaces one of the passed parameters
    # when launching the Cert-manager's controller.
    - op: replace
      path: /spec/template/spec/containers/0/args/3
      value: --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver@sha256:d1c5cc961ba68c341c482554a9e0f3b776394216b2150adf8b5328379c72dc3e

    # Configures CPU and memory requests and limits for the
    # Cert-manager's controller pod.
    - op: add
      path: /spec/template/spec/containers/0/resources
      value:
        requests:
          cpu: 1m
          memory: 30Mi
        limits:
          cpu: 100m
          memory: 500Mi

  target:
    kind: Deployment
    name: cert-manager
    namespace: cert-manager

# This patch configures the CPU and memory requests and limits for the
# Cert-manager's cainjector pod.
#
- patch: |-
    - op: add
      path: /spec/template/spec/containers/0/resources
      value:
        requests:
          cpu: 1m
          memory: 39Mi
        limits:
          cpu: 100m
          memory: 500Mi

  target:
    kind: Deployment
    name: cert-manager-cainjector
    namespace: cert-manager

# This patch configures the CPU and memory requests and limits for the
# Cert-manager's webhook pod.
#
- patch: |-
    - op: add
      path: /spec/template/spec/containers/0/resources
      value:
        requests:
          cpu: 1m
          memory: 20Mi
        limits:
          cpu: 100m
          memory: 500Mi

  target:
    kind: Deployment
    name: cert-manager-webhook
    namespace: cert-manager

# This patch configures the CPU and memory requests and limits for the
# DrabonflyDB operator pod.
#
- patch: |-
    # Resources for the "kube-rbac-proxy" sidecar container.
    - op: replace
      path: /spec/template/spec/containers/0/resources
      value:
        requests:
          cpu: 5m
          memory: 64Mi
        limits:
          cpu: 500m
          memory: 128Mi

    # Resources for the DragonflyDB operator container.
    - op: replace
      path: /spec/template/spec/containers/1/resources
      value:
        requests:
          cpu: 10m
          memory: 64Mi
        limits:
          cpu: 500m
          memory: 128Mi

  target:
    kind: Deployment
    name: dragonfly-operator-controller-manager
    namespace: dragonfly-operator-system

# This patch configures the Minio operator pod.
#
- patch: |-
    # Configures the CPU, memory, and ephemeral-storage requests and
    # limits.
    - op: replace
      path: /spec/template/spec/containers/0/resources
      value:
        requests:
          cpu: 1m
          memory: 24Mi
          ephemeral-storage: 500Mi
        limits:
          cpu: 500m
          memory: 500Mi
          ephemeral-storage: 2Gi

    # Configures the OCI container image used for tenants' sidecars.
    # The default image is "quay.io/minio/operator-sidecar:v6.0.2".
    - op: add
      path: /spec/template/spec/containers/0/env/-
      value:
        name: OPERATOR_SIDECAR_IMAGE
        value: quay.io/minio/operator-sidecar@sha256:8d99fd33b4934816bef415b1d4a14cd8238d29ba509591a4502ffd95dbf6a9f5

  target:
    kind: Deployment
    name: minio-operator
    namespace: minio-operator

# This patch configures Prometheus-related services.
#
- patch: |-
    # Sets a global registry. You may specify your private container
    # image registry (like "registry.example.com") here. The default
    # is `null`.
    - op: replace
      path: /spec/values/global/imageRegistry
      value: null

    # Specifies OCI image and CPU and memory requests and limits for
    # the Prometheus operator pod. Note that the `sha` value MUST NOT
    # be prefixed with "sha256:".
    - op: replace
      path: /spec/values/prometheusOperator/image/repository
      value: prometheus-operator/prometheus-operator
    - op: replace
      path: /spec/values/prometheusOperator/image/sha
      value: b6a89b8ec08f4cca759b2d579e8545f97ffb897973fcd68148c153f2e936c8b3
    - op: replace
      path: /spec/values/prometheusOperator/resources
      value:
        requests:
          cpu: 1m
          memory: 37Mi
        limits:
          cpu: 200m
          memory: 200Mi

    # Specifies OCI image and CPU and memory requests and limits for
    # Prometheus's configuration reloader sidecar containers. Note
    # that the `sha` value MUST NOT be prefixed with "sha256:".
    - op: replace
      path: /spec/values/prometheusOperator/prometheusConfigReloader/image/repository
      value: prometheus-operator/prometheus-config-reloader
    - op: replace
      path: /spec/values/prometheusOperator/prometheusConfigReloader/image/sha
      value: 78aec597d87aa2b4ba947ab9190538dae93a58a67b8e930aefea1086534b02ef
    - op: replace
      path: /spec/values/prometheusOperator/prometheusConfigReloader/resources
      value:
        requests:
          cpu: 1m
          memory: 37Mi
        limits:
          cpu: 200m
          memory: 50Mi

    # Specifies the "kube-webhook-certgen" OCI image. This image is
    # used by the Prometheus operator to set up Kubernetes admission
    # webhooks for the resources managed by the controller. Note that
    # the `sha` value MUST NOT be prefixed with "sha256:".
    - op: replace
      path: /spec/values/prometheusOperator/admissionWebhooks/patch/image/repository
      value: ingress-nginx/kube-webhook-certgen
    - op: replace
      path: /spec/values/prometheusOperator/admissionWebhooks/patch/image/sha
      value: 7a38cf0f8480775baaee71ab519c7465fd1dfeac66c421f28f087786e631456e

    # Configures the connection to the email server (smarthost) that
    # Alertmanager uses to send emails. If "smtp_auth_username" is
    # empty, Alertmanager doesn't authenticate to the SMTP server.
    - op: replace
      path: /spec/values/alertmanager/config/global
      value:
        smtp_smarthost: mailhog.mailhog.svc.cluster.local:1025
        smtp_from: 'from@example.com'
        smtp_require_tls: true
        smtp_auth_username: ''
        smtp_auth_password_file: '/etc/secrets/smtp-password'

    # Configures the email addresses that will receive alerts from
    # Alertmanager. The "send_resolved" flag specifies whether emails
    # for resolved alerts should be sent.
    - op: replace
      path: /spec/values/alertmanager/config/receivers/0/email_configs
      value:
        - to: 'to@example.com'
          send_resolved: true

    # Specifies the number of Alertmanager replicas to run. Should be
    # 2 or 3 in production (HA). 2 is probably good enough for most
    # clusters. May be 1 (no HA) for testing.
    - op: replace
      path: /spec/values/alertmanager/alertmanagerSpec/replicas
      value: 1

    # Specifies the size of the persistent volume mounted on each
    # Alertmanager replica. 1 or 2Gi should be enough for most
    # clusters.
    - op: replace
      path: /spec/values/alertmanager/alertmanagerSpec/storage/volumeClaimTemplate/spec/resources/requests/storage
      value: 1Gi

    # Specifies OCI image and CPU and memory requests and limits for
    # the Alertmanager pods. Note that the `sha` value MUST NOT be
    # prefixed with "sha256:".
    - op: replace
      path: /spec/values/alertmanager/alertmanagerSpec/image/repository
      value: prometheus/alertmanager
    - op: replace
      path: /spec/values/alertmanager/alertmanagerSpec/image/sha
      value: 27c475db5fb156cab31d5c18a4251ac7ed567746a2483ff264516437a39b15ba
    - op: replace
      path: /spec/values/alertmanager/alertmanagerSpec/resources
      value:
        requests:
          cpu: 1m
          memory: 35Mi
        limits:
          cpu: 200m
          memory: 200Mi

    # Specifies the number of kube-state-metrics replicas to run.
    # Should be at least 2 in production (HA). May be 1 (no HA) for
    # testing.
    - op: replace
      path: /spec/values/kube-state-metrics/replicas
      value: 1

    # Specifies OCI image and CPU and memory requests and limits for
    # the kube-state-metrics pods. Note that the value for
    # `/spec/values/kube-state-metrics/image/sha` MUST be prefixed
    # with "sha256:".
    - op: replace
      path: /spec/values/kube-state-metrics/image/repository
      value: kube-state-metrics/kube-state-metrics
    - op: replace
      path: /spec/values/kube-state-metrics/image/sha
      value: sha256:db384bf43222b066c378e77027a675d4cd9911107adba46c2922b3a55e10d6fb
    - op: replace
      path: /spec/values/kube-state-metrics/resources
      value:
        requests:
          cpu: 1m
          memory: 27Mi
        limits:
          cpu: 100m
          memory: 64Mi

    # Specifies OCI image and CPU and memory requests and limits for
    # the Prometheus node-exporter pod. Note that the value for
    # `/spec/values/prometheus-node-exporter/image/digest` MUST be
    # prefixed with "sha256:".
    - op: replace
      path: /spec/values/prometheus-node-exporter/image/repository
      value: prometheus/node-exporter
    - op: replace
      path: /spec/values/prometheus-node-exporter/image/digest
      value: sha256:d00a542e409ee618a4edc67da14dd48c5da66726bbd5537ab2af9c1dfc442c8a
    - op: replace
      path: /spec/values/prometheus-node-exporter/resources
      value:
        requests:
          cpu: 1m
          memory: 19Mi
        limits:
          cpu: 200m
          memory: 50Mi

    # Specifies OCI image and CPU and memory requests and limits for
    # the Prometheus server. Note that the `sha` value MUST NOT be
    # prefixed with "sha256:".
    - op: replace
      path: /spec/values/prometheus/prometheusSpec/image/repository
      value: prometheus/prometheus
    - op: replace
      path: /spec/values/prometheus/prometheusSpec/image/sha
      value: 3b1d5be5c3eef4f027665ddaa3b1a7de8a58d96a0a6de5dd45629afd267ecaf0
    - op: replace
      path: /spec/values/prometheus/prometheusSpec/resources
      value:
        requests:
          cpu: 1m
          memory: 200Mi
        limits:
          cpu: 1000m
          memory: 1Gi

    # Specifies the number of days for which the Prometheus server
    # will keep the collected metrics. The default is 10d, which is
    # reasonable. Can be lower for testing.
    - op: replace
      path: /spec/values/prometheus/prometheusSpec/retention
      value: 2d

    # Specifies the size of the persistent volume mounted on the
    # Prometheus server. The needed disk space depends on the number
    # of scrape targets, the number of time series, the metrics
    # cardinality, the scraping interval, and the retention period.
    # Most probably should be in the range from 10Gi to 100Gi. Can be
    # lower for testing.
    - op: replace
      path: /spec/values/prometheus/prometheusSpec/storageSpec/volumeClaimTemplate/spec/resources/requests/storage
      value: 1Gi

    # Specifies the size of the persistent volume mounted on the
    # Grafana server. The persistent volume is used to store
    # configuration, plugins, and dashboards, and therefore does not
    # require too much space. Most probably it should be in the range
    # from 5Gi to 10Gi. Can be lower for testing.
    - op: replace
      path: /spec/values/grafana/persistence/size
      value: 1Gi

    # Specifies OCI image and CPU and memory requests and limits for
    # the Grafana pod. Note that the `sha` value MUST NOT be prefixed
    # with "sha256:".
    - op: replace
      path: /spec/values/grafana/image/repository
      value: grafana/grafana
    - op: replace
      path: /spec/values/grafana/image/sha
      value: b5b59bfc7561634c2d7b136c4543d702ebcc94a3da477f21ff26f89ffd4214fa
    - op: replace
      path: /spec/values/grafana/resources
      value:
        requests:
          cpu: 1m
          memory: 153Mi
        limits:
          cpu: 500m
          memory: 1000Mi

    # Specifies OCI image and CPU and memory requests and limits for
    # the Grafana pod sidecars. Note that the `sha` value MUST NOT be
    # prefixed with "sha256:".
    - op: replace
      path: /spec/values/grafana/sidecar/image/repository
      value: kiwigrid/k8s-sidecar
    - op: replace
      path: /spec/values/grafana/sidecar/image/sha
      value: 49dcce269568b1645b0050f296da787c99119647965229919a136614123f0627
    - op: replace
      path: /spec/values/grafana/sidecar/resources
      value:
        requests:
          cpu: 1m
          memory: 106Mi
        limits:
          cpu: 500m
          memory: 500Mi

  target:
    group: helm.toolkit.fluxcd.io
    version: v2
    kind: HelmRelease
    name: kube-prometheus-stack
    namespace: monitoring

# This patch configures the range of IP addresses that Prometheus's
# Alertmanager is allowed to initiate connections to. Usually, this
# should be the SMTP server's network.
- patch: |-
    - op: replace
      path: /spec/egress/0/to/0/ipBlock/cidr
      value: 0.0.0.0/0

  target:
    group: networking.k8s.io
    version: v1
    kind: NetworkPolicy
    name: allow-alertmanager-smtp-access
    namespace: monitoring

# This patch configures the CPU and memory requests and limits for the
# Nginx server which serves the Grafana plugins.
#
- patch: |-
    - op: replace
      path: /spec/template/spec/containers/0/resources
      value:
        requests:
          cpu: 1m
          memory: 4Mi
        limits:
          cpu: 500m
          memory: 128Mi

  target:
    kind: Deployment
    name: prometheus-grafana-plugins
    namespace: monitoring

secretGenerator:
- name: prometheus-grafana-admin
  namespace: monitoring

  literals:
  # The username for the Grafana admin.
  - admin-user=admin

  files:
  # A SOPS-encrypted file containing the password for the Grafana
  # admin. To SOPS-encrypt your chosen password, you may use this
  # command:
  #
  # $ echo -n 'YOUR_SECRET_PASSWORD' > grafana-admin-password
  # $ sops encrypt grafana-admin-password > grafana-admin-password.encrypted
  # $ shred -z grafana-admin-password
  # $ rm grafana-admin-password
  - admin-password=secrets/grafana-admin-password.encrypted

  options:
    disableNameSuffixHash: true

    # These annotations are used as sources for convenient Kustomize
    # replacements:
    #
    annotations:
      # Grafana's, Alertmanager's, and Prometheus's UIs are publicly
      # exposed via an HTTP reverse proxy server in the
      # "simple-git-server" namespace. Here, the IP address of the
      # load balancer for this proxy server should be specified.
      #
      kustomize_simple_git_server_ip_address: 172.18.0.4

  type: Opaque

- name: regcreds
  namespace: cert-manager
  files:
  - ".dockerconfigjson=../regcreds.json.encrypted"
  options:
    disableNameSuffixHash: true
  type: kubernetes.io/dockerconfigjson

- name: regcreds
  namespace: dragonfly-operator-system
  files:
  - ".dockerconfigjson=../regcreds.json.encrypted"
  options:
    disableNameSuffixHash: true
  type: kubernetes.io/dockerconfigjson

- name: regcreds
  namespace: postgres-operator
  files:
  - ".dockerconfigjson=../regcreds.json.encrypted"
  options:
    disableNameSuffixHash: true
  type: kubernetes.io/dockerconfigjson

- name: regcreds
  namespace: rabbitmq-system
  files:
  - ".dockerconfigjson=../regcreds.json.encrypted"
  options:
    disableNameSuffixHash: true
  type: kubernetes.io/dockerconfigjson

- name: regcreds
  namespace: monitoring
  files:
  - ".dockerconfigjson=../regcreds.json.encrypted"
  options:
    disableNameSuffixHash: true
  type: kubernetes.io/dockerconfigjson

- name: regcreds
  namespace: kube-system
  files:
  - ".dockerconfigjson=../regcreds.json.encrypted"
  options:
    disableNameSuffixHash: true
  type: kubernetes.io/dockerconfigjson

- name: regcreds
  namespace: minio-operator
  files:
  - ".dockerconfigjson=../regcreds.json.encrypted"
  options:
    disableNameSuffixHash: true
  type: kubernetes.io/dockerconfigjson

resources:
- ../../base/controllers/

replacements:
- path: ../../base/controllers/monitoring/replacements/simple-git-server-ip-address.yaml
